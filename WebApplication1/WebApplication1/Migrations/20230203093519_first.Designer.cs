// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Models;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(dbContext))]
    [Migration("20230203093519_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication1.Models.Project", b =>
                {
                    b.Property<int>("IdTeam")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdTeam");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            IdTeam = 1,
                            Deadline = new DateTime(2023, 2, 3, 10, 35, 18, 921, DateTimeKind.Local).AddTicks(3762),
                            Name = "project1"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Task", b =>
                {
                    b.Property<int>("IdTask")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("IdAssignedTo")
                        .HasColumnType("int");

                    b.Property<int>("IdCreator")
                        .HasColumnType("int");

                    b.Property<int>("IdTaskType")
                        .HasColumnType("int");

                    b.Property<int>("IdTeam")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("TeamMemberIdTeamMember")
                        .HasColumnType("int");

                    b.HasKey("IdTask");

                    b.HasIndex("IdAssignedTo");

                    b.HasIndex("IdCreator");

                    b.HasIndex("IdTaskType");

                    b.HasIndex("IdTeam");

                    b.HasIndex("TeamMemberIdTeamMember");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            IdTask = 1,
                            Deadline = new DateTime(2023, 2, 3, 10, 35, 18, 934, DateTimeKind.Local).AddTicks(9025),
                            Description = "Opis",
                            IdAssignedTo = 1,
                            IdCreator = 1,
                            IdTaskType = 1,
                            IdTeam = 1,
                            Name = "zadanie1"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.TaskType", b =>
                {
                    b.Property<int>("IdTaskType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdTaskType");

                    b.ToTable("TaskTypes");

                    b.HasData(
                        new
                        {
                            IdTaskType = 1,
                            Name = "niewiem"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.TeamMember", b =>
                {
                    b.Property<int>("IdTeamMember")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdTeamMember");

                    b.ToTable("TeamMembers");

                    b.HasData(
                        new
                        {
                            IdTeamMember = 1,
                            Email = "niewiem@gmail.com",
                            FirstName = "michał",
                            LastName = "Kowalski"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Task", b =>
                {
                    b.HasOne("WebApplication1.Models.TeamMember", "AssignTo")
                        .WithMany()
                        .HasForeignKey("IdAssignedTo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.TeamMember", "Creator")
                        .WithMany()
                        .HasForeignKey("IdCreator")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.TaskType", "TaskType")
                        .WithMany("Tasks")
                        .HasForeignKey("IdTaskType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("IdTeam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.TeamMember", null)
                        .WithMany("Tasks")
                        .HasForeignKey("TeamMemberIdTeamMember");
                });
#pragma warning restore 612, 618
        }
    }
}
